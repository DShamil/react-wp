{"version":3,"sources":["components/SingleLocation.js","components/Locations.js","components/SingleAttraction.js","components/attractions.js","App.js","serviceWorker.js","index.js"],"names":["SingleLocation","state","imgUrl","isLoaded","getImageUrl","axios","get","this","props","location","featured_media","Promise","all","then","res","setState","data","media_details","sizes","full","source_url","title","excerpt","style","width","overflow","backgroundPosition","src","alt","rendered","padding","border","margin","dangerouslySetInnerHTML","__html","Component","Locations","locations","catch","err","console","log","Row","map","Col","sm","key","id","SingleAttraction","attraction","minWidth","minHeight","maxHeight","Attractions","attractions","App","className","Container","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.6fe3cf0b.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class SingleLocation extends Component{\r\n    state = {\r\n        imgUrl: '',\r\n        isLoaded: false\r\n    }\r\n    static propTypes = {\r\n        location: PropTypes.object.isRequired\r\n    }\r\n    componentDidMount(){           \r\n        const getImageUrl = axios.get('https://paruwa.co.uk/wp-json/wp/v2/media/'+this.props.location.featured_media);\r\n        Promise.all([getImageUrl]).then(res => {\r\n            this.setState({\r\n                imgUrl: res[0].data.media_details.sizes.full.source_url,\r\n                isLoaded: true\r\n            });\r\n        })\r\n    }\r\n    render(){        \r\n        const { title, excerpt } = this.props.location;\r\n        const {imgUrl, isLoaded} = this.state;\r\n        if(isLoaded){\r\n            return(\r\n                <div>                    \r\n                    <div style={{width: '100%', overflow:'hidden',backgroundPosition: 'center center'}}>\r\n                        <img style={{width: '100%'}} src={imgUrl} alt={title.rendered} />\r\n                    </div>\r\n                    <div style={{padding: '15px', border: '1px solid #efefef',margin:'0px 0px 15px 0px'}}>\r\n                    <h4> { title.rendered} </h4>\r\n                    <div dangerouslySetInnerHTML={{__html: excerpt.rendered}}></div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n       return null;\r\n    }\r\n}\r\nexport default SingleLocation;","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport SingleLocation from './SingleLocation';\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\n\r\nexport class Locations extends Component{\r\n    state ={\r\n        \r\n        Locations: [],\r\n        isLoaded: false\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.get('https://paruwa.co.uk/wp-json/wp/v2/location')\r\n        .then(res => this.setState({\r\n            locations: res.data,\r\n            isLoaded:true\r\n        }))\r\n        .catch(err => console.log(err));\r\n    }\r\n    render(){\r\n        const { locations, isLoaded } = this.state;\r\n        if(isLoaded){\r\n            return(\r\n                <div>\r\n                    <Row>\r\n                        {locations.map(location =>(\r\n                            <Col sm={3} key={location.id}>\r\n                            <SingleLocation  location={location} />\r\n                            </Col>\r\n                        ))}\r\n                    </Row>\r\n                   \r\n                </div>  \r\n            );\r\n        }\r\n        return <p>...</p>\r\n    }\r\n}\r\nexport default Locations","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class SingleAttraction extends Component{\r\n    state = {\r\n        imgUrl: '',\r\n        isLoaded: false\r\n    }\r\n    static propTypes = {\r\n        attraction: PropTypes.object.isRequired\r\n    }\r\n    componentDidMount(){           \r\n        const getImageUrl = axios.get('https://paruwa.co.uk/wp-json/wp/v2/media/'+this.props.attraction.featured_media);\r\n        Promise.all([getImageUrl]).then(res => {\r\n            this.setState({\r\n                imgUrl: res[0].data.media_details.sizes.full.source_url,\r\n                isLoaded: true\r\n            });\r\n        })\r\n    }\r\n    render(){        \r\n        const { title, excerpt } = this.props.attraction;\r\n        const {imgUrl, isLoaded} = this.state;\r\n        if(isLoaded){\r\n            return(\r\n                <div>                    \r\n                    <div style={{width: '100%', overflow:'hidden',backgroundPosition: 'center center'}}>\r\n                        <img style={{minWidth: '100%',minHeight:'200px',maxHeight: '200px'}} src={imgUrl} alt={title.rendered} />\r\n                    </div>\r\n                    <div style={{padding: '15px', border: '1px solid #efefef',margin:'0px 0px 15px 0px'}}>\r\n                    <h4> { title.rendered} </h4>\r\n                    <div dangerouslySetInnerHTML={{__html: excerpt.rendered}}></div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n       return null;\r\n    }\r\n}\r\nexport default SingleAttraction;","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport SingleAttraction from './SingleAttraction';\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\n\r\nexport class Attractions extends Component{\r\n    state ={\r\n        \r\n        Attractions: [],\r\n        isLoaded: false\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.get('https://paruwa.co.uk/wp-json/wp/v2/st_activity')\r\n        .then(res => this.setState({\r\n            attractions: res.data,\r\n            isLoaded:true\r\n        }))\r\n        .catch(err => console.log(err));\r\n    }\r\n    render(){\r\n        const { attractions, isLoaded } = this.state;\r\n        if(isLoaded){\r\n            return(\r\n                <div>\r\n                    <Row>\r\n                        {attractions.map(attraction =>(\r\n                            <Col sm={3} key={attraction.id}>\r\n                            <SingleAttraction  attraction={attraction} />\r\n                            </Col>\r\n                        ))}\r\n                    </Row>\r\n                   \r\n                </div>  \r\n            );\r\n        }\r\n        return <p>...</p>\r\n    }\r\n}\r\nexport default Attractions","import React from 'react';\nimport Locations from './components/Locations';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport Container from 'react-bootstrap/Container'\nimport Attractions from './components/attractions';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <Container>\n      <h1>Destinations</h1>\n      <Locations/>\n      <hr/>\n      <h1>Attractions</h1>\n      <Attractions/>\n    </Container>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}